"use strict";const timeFormat=function(t){let e=null,r=null;if("YYYY-MM-DD"===t&&(e=1),"YYYY-MM-DD hh:mm:ss"===t&&(e=2),!e)throw Error("Please use YYYY-MM-DD Or YYYY-MM-DD hh:mm:ss");const a=new Date;let o=a.getFullYear().toString(),n=(a.getMonth()+1).toString().padStart(2,"0"),i=a.getDate().toString().padStart(2,"0"),Y=a.getHours().toString().padStart(2,"0"),m=a.getMinutes().toString().padStart(2,"0"),s=a.getSeconds().toString().padStart(2,"0");if(!(r=1==e?o+"-"+n+"-"+i:o+"-"+n+"-"+i+" "+Y+":"+m+":"+s))throw Error("Something err");return r},timeSetFormat=function(t,e){let r=null,a=null;if("YYYY-MM-DD"===e&&(r=1),"YYYY-MM-DD hh:mm:ss"===e&&(r=2),!r)throw Error("Please use YYYY-MM-DD Or YYYY-MM-DD hh:mm:ss");const o=new Date(t);let n=o.getFullYear().toString(),i=(o.getMonth()+1).toString().padStart(2,"0"),Y=o.getDate().toString().padStart(2,"0"),m=o.getHours().toString().padStart(2,"0"),s=o.getMinutes().toString().padStart(2,"0"),g=o.getSeconds().toString().padStart(2,"0");if(!(a=1==r?n+"-"+i+"-"+Y:n+"-"+i+"-"+Y+" "+m+":"+s+":"+g))throw Error("Something err");return a},whichType=t=>Object.prototype.toString.call(t).replace(/\[object /,"").replace("]",""),timeCompare=(t,e)=>{if("String"!==whichType(t)||"String"!==whichType(e))throw Error("The arguments must be a String");const r=new Date(t).valueOf(),a=new Date(e).valueOf();if(isNaN(r)||isNaN(a))throw Error("new Date(arguments).valueOf() is not a number , Please use the arguments like YYYY-MM-DD Or YYYY-MM-DD hh:mm:ss");return r-a>0?1:r-a==0?0:-1};module.exports={timeFormat:timeFormat,whichType:whichType,timeCompare:timeCompare,timeSetFormat:timeSetFormat};